@import 'node_modules/bootstrap/scss/mixins';
@import '~/variables';

// Mixin
@mixin hideScrollbar {
  padding-top: 10px;
  padding-bottom: 10px;
  margin-top: -10px;
  margin-bottom: -10px;
  -ms-overflow-style: none;
  /* IE and Edge */
  scrollbar-width: none;

  /* Firefox */
  &::-webkit-scrollbar {
    //Chrome, Safari, Opera
    display: none;
  }
}

@mixin d-flex($align: start, $justify: start, $direction: row) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
}

@mixin col($sizes) {

  @each $breakpoint,
  $size in $sizes {
    @include media-breakpoint-up($breakpoint) {

      &,
      &.col {
        @if $size !=auto {
          @include make-col($size, $grid-columns);
        }

        @else {
          @include make-col-auto();
        }
      }
    }
  }
}

@mixin offset($sizes) {

  @each $breakpoint,
  $size in $sizes {
    @include media-breakpoint-up($breakpoint) {
      @include make-col-offset($size, $grid-columns);
    }
  }
}

@function box-shadow($size, $alpha) {
  @return 0px 3px #{$size}px rgba($border-shadow-color, $alpha);
}

@function sp($spacerKey) {
  $sp: map-get($spacers, $spacerKey);

  @return $sp;
}

@function sp-n($spacerKey) {
  $sp: map-get($spacers, $spacerKey);

  @return -$sp;
}

@function colSizePrc($columnSize) {
  $sp: percentage($columnSize / $grid-columns);
  @return $sp;
}

@mixin mediaTag($tag, $pos, $sizes) {

  @each $breakpoint,
  $spacer in $sizes {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
      $props: (m: margin,
          p: padding,
          r: right,
          l: left,
          t: top,
          b: bottom,
          w: width,
          h: height,
          ft: font,
          ln: line,
          d: display,
          jtfy: justify,
          align: align,
          txt: text,
        );
      $positions: (l: left,
          r: right,
          t: top,
          b: bottom,
          s: size,
          h: height,
          wg:weight,
          cont: content,
          items: items,
          align:align,
        );

      $prop: map-get($props, $tag);
      $rem_size: map-get($spacers, $spacer);
      $length: $spacer;

      @if $rem_size {
        $length: $rem_size;
      }


      @if $pos=='y' {
        #{$prop}-top: #{$length};
        #{$prop}-bottom: #{$length};
      }

      @else if $pos=='x' {
        #{$prop}-left: #{$length};
        #{$prop}-right: #{$length};
      }

      @else if $pos=='' {
        #{$prop}: #{$length};
      }

      @else {
        #{$prop}-#{map-get($positions, $pos)}: #{$length};
      }
    }
  }
}


// justify-content
@mixin text-align($sizes) {
  @include mediaTag(txt, align, $sizes);
}

// justify-content
@mixin justify-content($sizes) {
  @include mediaTag(jtfy, Cont, $sizes);
}

//  align-content
@mixin align-content($sizes) {
  @include mediaTag(align, Cont, $sizes);
}

//  align-items
@mixin align-items($sizes) {
  @include mediaTag(align, items, $sizes);
}

// display
@mixin display($sizes) {
  @include mediaTag(d, '', $sizes);
}

// font-size
@mixin font-size($sizes) {
  @include mediaTag(ft, s, $sizes);
}

// line-height
@mixin line-height($sizes) {
  @include mediaTag(ln, h, $sizes);
}

// font-weight
@mixin font-weight($sizes) {
  @include mediaTag(ft, wg, $sizes);
}

// width
@mixin width($sizes) {
  @include mediaTag(w, '', $sizes);
}

// height
@mixin height($sizes) {
  @include mediaTag(h, '', $sizes);
}

// top
@mixin top($sizes) {
  @include mediaTag(t, '', $sizes);
}

// bottom
@mixin bottom($sizes) {
  @include mediaTag(b, '', $sizes);
}

// right
@mixin right($sizes) {
  @include mediaTag(r, '', $sizes);
}

//left
@mixin left($sizes) {
  @include mediaTag(p, '', $sizes);
}

// margin
@mixin m($sizes) {
  @include mediaTag(m, '', $sizes);
}

// padding
@mixin p($sizes) {
  @include mediaTag(p, '', $sizes);
}

// margin-top
@mixin mt($sizes) {
  @include mediaTag(m, t, $sizes);
}

// margin-bottom
@mixin mb($sizes) {
  @include mediaTag(m, b, $sizes);
}

// margin-left
@mixin ml($sizes) {
  @include mediaTag(m, l, $sizes);
}

// margin-right
@mixin mr($sizes) {
  @include mediaTag(m, r, $sizes);
}

// margin top + margin-bottom
@mixin my($sizes) {
  @include mediaTag(m, y, $sizes);
}

// margin-left + margin-right
@mixin mx($sizes) {
  @include mediaTag(m, x, $sizes);
}

// padding-top
@mixin pt($sizes) {
  @include mediaTag(p, t, $sizes);
}

// padding-bottom
@mixin pb($sizes) {
  @include mediaTag(p, b, $sizes);
}

// padding-left
@mixin pl($sizes) {
  @include mediaTag(p, l, $sizes);
}

// padding-right
@mixin pr($sizes) {
  @include mediaTag(p, r, $sizes);
}

// padding top + padding-bottom
@mixin py($sizes) {
  @include mediaTag(p, y, $sizes);
}

// padding-left + padding-right
@mixin px($sizes) {
  @include mediaTag(p, x, $sizes);
}